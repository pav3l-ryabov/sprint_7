{"uid":"d2437ceaadbefec6","name":"Тест авторизации существующего курьера с неправильным паролем","fullName":"tests.test_login_courier.TestLoginCourier#test_create_and_login_courier_with_invalid_pass","historyId":"6f9cbb9311cf1a139765dea5506b22fc","time":{"start":1747162865851,"stop":1747162866092,"duration":241},"status":"failed","statusMessage":"AssertionError: Ожидали сообщение \"Учетная запись не найдена\", а получили <bound method Response.json of <Response [404]>>\nassert {'code': 404,...ь не найдена'} == {'message': '...ь не найдена'}\n  \n  Omitting 1 identical items, use -vv to show\n  Left contains 1 more item:\n  {'code': 404}\n  Use -v to get more diff","statusTrace":"self = <tests.test_login_courier.TestLoginCourier object at 0x00000244E9E8A060>\ncreate_courier_and_delete = {'first_name': 'xfeleqwwgr', 'id': 517943, 'login': 'bmyiendyjm', 'password': 'nvnfybzueb'}\n\n    @allure.title('Тест авторизации существующего курьера с неправильным паролем')\n    # тест, который проверит:\n    # система вернёт ошибку, если неправильно указать логин или пароль\n    def test_create_and_login_courier_with_invalid_pass(self, create_courier_and_delete):\n        login, _, _, _ = create_courier_and_delete\n        payload = {\"login\": login, \"password\": 'invalid_pass'}\n        response, status = CourierMethods().login_courier(payload)\n        assert status == 404, f'Ожидали 404, получили {status}'\n>       assert response.json() == {\"message\": \"Учетная запись не найдена\"}, f'Ожидали сообщение \"Учетная запись не найдена\", а получили {response.json}'\nE       AssertionError: Ожидали сообщение \"Учетная запись не найдена\", а получили <bound method Response.json of <Response [404]>>\nE       assert {'code': 404,...ь не найдена'} == {'message': '...ь не найдена'}\nE         \nE         Omitting 1 identical items, use -vv to show\nE         Left contains 1 more item:\nE         {'code': 404}\nE         Use -v to get more diff\n\ntests\\test_login_courier.py:39: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"create_courier_and_delete","time":{"start":1747162865375,"stop":1747162865851,"duration":476},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[{"name":"create_courier_and_delete::0","time":{"start":1747162866096,"stop":1747162866445,"duration":349},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login_courier"},{"name":"subSuite","value":"TestLoginCourier"},{"name":"host","value":"WIN-E0CER839EN3"},{"name":"thread","value":"4664-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login_courier"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"d2437ceaadbefec6.json","parameterValues":[]}