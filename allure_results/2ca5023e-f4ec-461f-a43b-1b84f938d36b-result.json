{"name": "Тест создания двух одинаковых курьеров", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидали сообщение \"Этот логин уже используется\", получили <bound method Response.json of <Response [409]>>\nassert {'code': 409,...уйте другой.'} == {'message': '...используется'}\n  \n  Differing items:\n  {'message': 'Этот логин уже используется. Попробуйте другой.'} != {'message': 'Этот логин уже используется'}\n  Left contains 1 more item:\n  {'code': 409}\n  Use -v to get more diff", "trace": "self = <tests.test_create_courier.TestCreateCourier object at 0x00000244E9E76850>\ncreate_courier_and_delete = {'first_name': 'juutmjdccb', 'id': 517939, 'login': 'qtwebezmli', 'password': 'scyblkumjz'}\n\n    @allure.title('Тест создания двух одинаковых курьеров')\n    # тест, который проверит:\n    # что нельзя создать двух одинаковых курьеров,\n    # запрос возвращает правильный код ответа,\n    # если создать пользователя с логином, который уже есть, возвращается ошибка.\n    def test_create_double_courier(self, create_courier_and_delete):\n        login, password, first_name, _ = create_courier_and_delete\n        payload = {\"login\": login, \"password\": password, \"firstName\": first_name}\n        response, status = CourierMethods().create_courier(payload)\n        assert status == 409, f'Ожидали 409, получили {status}'\n>       assert response.json() == {'message': 'Этот логин уже используется'}, \\\n            f'Ожидали сообщение \"Этот логин уже используется\", получили {response.json}'\nE       AssertionError: Ожидали сообщение \"Этот логин уже используется\", получили <bound method Response.json of <Response [409]>>\nE       assert {'code': 409,...уйте другой.'} == {'message': '...используется'}\nE         \nE         Differing items:\nE         {'message': 'Этот логин уже используется. Попробуйте другой.'} != {'message': 'Этот логин уже используется'}\nE         Left contains 1 more item:\nE         {'code': 409}\nE         Use -v to get more diff\n\ntests\\test_create_courier.py:28: AssertionError"}, "start": 1747162796095, "stop": 1747162796328, "uuid": "b586cfe7-3e35-4a7d-a028-9bddff7211af", "historyId": "e9b504aeddfb364a12068e7ed78b8bef", "testCaseId": "e9b504aeddfb364a12068e7ed78b8bef", "fullName": "tests.test_create_courier.TestCreateCourier#test_create_double_courier", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_courier"}, {"name": "subSuite", "value": "TestCreateCourier"}, {"name": "host", "value": "WIN-E0CER839EN3"}, {"name": "thread", "value": "4664-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_courier"}]}